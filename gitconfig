#Â·.gitconfig

[core]
	editor = vim
	pager = cat
	# TODO autocrlf
	safecrlf = true
	;whitespace = -blank-at-eof
	precomposeUnicode = true

[init]
	defaultBranch = trunk

[help]
	autoCorrect = prompt

[url "https://github.com/"]
	insteadOf = "github:"

[url "https://gist.github.com/"]
	insteadOf = "gist:"

[alias]
	co = checkout
	br = ! git for-each-ref refs/heads/ --sort=-committerdate --format='%(color:blue)%(objectname:short)%(color:reset) %(refname:short) | %(color:green)%(committerdate:relative)%(color:reset) |%(if)%(upstream)%(then) %(upstream:short) %(upstream:track)%(end)|'
	sb = status -sb
	au = add -u
	sf = submodule foreach --recursive
	cm = commit -m
	pi = stash pop --index
	pm = stash push -m
	rs = restore --staged
	ol = log --oneline
	ol = ! git log --pretty=format:'%C(auto)%cI %h %s%d' "$@" && printf '\\n'
	wt = worktree

[alias]
	shallow-clone = clone --depth=1 --shallow-submodules --recurse-submodules #--remote-submodules
	clone-r = clone --recursive
	pull-r = pull --recurse-submodules
	pufw = push --force-with-lease

[alias]
	aliases = config --get-regexp ^alias\\.
	branches = branch -a
	contributors = shortlog -s --email --no-merges -n
	remotes = remote -v
	tags = tag -l

[alias]
	ana = add -NA
	cam = commit -a -m
	dns = diff --name-status
	mnn = merge --no-commit --no-ff
	rmd = ! git ls-files -d | xargs -r git rm
	pop-i = stash pop --index
	save-u = stash save -u
	scour-n = clean -nxffd
	reset-f = ! git reset --hard $1 && git clean -xffd && :
	puta = push --follow-tags
	root = !pwd # ~ rev-parse --show-toplevel
	down = log --branches --not --remotes # \ git branch -r

[alias]
	whoami = !printf '%s <%s>\\n' \"$(git config user.name)\" \"$(git config user.email)\"
	log-rs = log --reverse --pretty=format:'%h|%aN|%s'

[diff "rtf"]
	textconv = unrtf --text
	binary = true
	cachetextconv = true

[diff "hex"]
	textconv = hexdump --canonical --no-squeezing
	binary = true

[diff]
	wordRegex = "[^][\"'[:space:],.;:()<>/+={}!@#^&*`?|]+|[][\"',.;:()<>/+={}!@#^&*`?|]"

[alias]
	dc = ! cd \"${GIT_PREFIX:-.}\" && set -f && git diff -w --ignore-blank-lines --word-diff=color -C \"$@\" && printf '%*s\n\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _ && git diff --check
	dcs = ! cd \"${GIT_PREFIX:-.}\" && set -f && git diff --staged -w --ignore-blank-lines --word-diff=color -C \"$@\" && printf '%*s\n\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _ && git diff --staged --check
	dx = diff -w --ignore-blank-lines --color-words --no-index
	db = diff -b --ignore-blank-lines --stat

# Beyond Compare; under Linux, use "bc3"
[diff]
	tool = bc ; bc3
[merge]
	tool = bc ; bc3
[difftool "bc"]
	path = "C:/Program Files/Beyond Compare 4/BComp.exe"
[mergetool "bc"]
	path = "C:/Program Files/Beyond Compare 4/BComp.exe"
[difftool "bc3"]
	trustExitCode = true
[mergetool "bc3"]
	trustExitCode = true

[merge]
	conflictStyle = diff3 # "zdiff3" zealously introduced in v2.35 (Jan 2022)

#[core]
#	editor = code -w
[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE
[mergetool "vscode"]
	cmd = code --wait $MERGED

[color]
	branch = false

[status]
	showStash = true
	submoduleSummary = true

[advice]
	ignoredHook = true
	detachedHead = false
	addEmptyPathspec = false

[diff "utf-16"]
	textconv = iconv -f utf-16 -t utf-8

[diff "nodiff"]
	command = true

[rerere]
	enabled = true

[rebase]
	stat = true
	missingCommitsCheck = error

[pull]
	rebase = true

#[fetch]
#	prune = true
#	pruneTags = false

#[push]
#	default = nothing

[apply]
	whitespace = fix

[diff]
	renames = copies
	mnemonicPrefix = true
	noPrefix = true
	algorithm = histogram

[user]
	useConfigOnly = true

#[user]
#	name = nikita-r
#	email = nikita-r@device
#
#[commit]
#	gpgSign = true
#[push]
#	gpgSign = true
#[tag]
#	gpgSign = true
#
[include]
	path = ~/.gitconfig.local

