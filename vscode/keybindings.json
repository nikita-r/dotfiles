[
	/*
	$: editor.action.dirtydiff.next: "alt+f3"
	$: editor.action.insertCursorAtEndOfEachLineSelected: "shift+alt+i"
	$: editor.action.removeBrackets: "ctrl+alt+backspace"
	$: editor.action.replaceAll: "ctrl+alt+enter"
	$: editor.action.selectAllMatches: "alt+enter"
	$: editor.action.setSelectionAnchor: "ctrl+k ctrl+b"
	$: editor.createFoldingRangeFromSelection: "ctrl+k ctrl+,"
	$: editor.detectLanguage: "shift+alt+d"
	$: editor.toggleFold: "ctrl+k ctrl+l"
	$: rerunSearchEditorSearch: "ctrl+shift+r"
	$: workbench.action.chat.open: "ctrl+cmd+i"
	$: workbench.action.closeUnmodifiedEditors: "ctrl+k u"
	$: workbench.action.editor.changeLanguageMode: "ctrl+k m"
	$: workbench.action.keepEditor: "ctrl+k enter"
	$: workbench.action.navigateToLastEditLocation: "ctrl+k ctrl+q"
	$: workbench.action.splitEditorInGroup: "ctrl+k ctrl+shift+\\"
	$: workbench.action.toggleMaximizeEditorGroup: "ctrl+k ctrl+m"
	?: "isInDiffEditor": F7/Shift+F7 to diffReview
	%: Show or Focus Hover: "ctrl+k ctrl+i"
	*/

	{ "command": "noop", "key": "ctrl+shift+u" }, // in GtkIMContextSimple, ^+U is bound to input Unicode codepoint
	{ "command": "noop", "key": "ctrl+shift+n" },
	{ "command": "noop", "key": "ctrl+shift+0" }, // cannot receive ^+0 under Windows
	{ "command": "noop", "key": "ctrl+shift+9" },
	{ "key": "ctrl+u", "command": "cursorUndo" },
	{ "key": "ctrl+y", "command": "cursorRedo" },
	{ "key": "shift+alt+y", "command": "notifications.showList" },
	//{ "key": "shift+alt+y", "command": "notifications.hideList", "when": "notificationCenterVisible" },
	{ "key": "shift+ctrl+y", "command": "textmarker.toggleHighlight" },

	{ "key": "ctrl+;", "command": "breadcrumbs.focus" }, // instead of "ctrl+shift+;"
	{ "key": "ctrl+'", "command": "workbench.action.toggleAuxiliaryBar" },
	{ "key": "ctrl+shift+;", "command": "workbench.actions.view.problems" },
	{ "key": "ctrl+shift+'", "command": "workbench.action.output.toggleOutput" },

	/* Open Link */
	{
		"key": "ctrl+shift+g",
		"command": "editor.action.openLink"
	},
	{
		"key": "ctrl+shift+g",
		"command": "workbench.action.terminal.openDetectedLink",
		"when": "accessibleViewCurrentProviderId == 'terminal' || terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},

	{ "command": "noop", "key": "alt+/" },
	{ "command": "noop", "key": "alt+\\" },
	{ "command": "", "key": "alt+-" },
	{ "command": "", "key": "alt+=" },
	{ "command": "", "key": "shift+alt+o" },
	{ "command": "", "key": "shift+alt+1" },
	{ "command": "", "key": "shift+alt+9" },
	{ "command": "noop", "key": "shift+alt+delete" },
	{ "command": "noop", "key": "shift+alt+backspace" },

	/* Files Explorer */
	{
		"key": "ctrl+shift+e",
		"command": "workbench.files.action.focusFilesExplorer"
	},
	{
		"key": "ctrl+n",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus"
	},
	{
		"key": "ctrl+shift+n",
		"command": "explorer.newFolder",
		"when": "filesExplorerFocus"
	},

	/* pour Web-based */
	{
		"key": "ctrl+k w",
		"command": "workbench.action.closeActiveEditor"
	},
	{
		"key": "ctrl+k w",
		"command": "workbench.action.closeGroup",
		"when": "activeEditorGroupEmpty"
	},
	{
		"key": "ctrl+k t",
		"command": "workbench.action.reopenClosedEditor"
	},
	/* Ctrl+k n/N: for New */
	{
		"key": "ctrl+k n",
		"command": "workbench.action.files.newUntitledFile"
	},
	{
		"key": "ctrl+k shift+n", /* vscode-github-issue-notebooks */
		"command": "workbench.action.files.newUntitledFile", "args": { "viewType": "github-issues" }
	},
	{
		"key": "ctrl+k n",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus"
	},
	{
		"key": "ctrl+k shift+n",
		"command": "explorer.newFolder",
		"when": "filesExplorerFocus"
	},
	{
		"key": "ctrl+k shift+n",
		"command": "workbench.action.terminal.moveIntoNewWindow",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "ctrl+k shift+n",
		"command": "workbench.action.moveEditorGroupToNewWindow",
		"when": "groupEditorsCount || groupEditorsCount == 0"
	},
	{
		"key": "ctrl+k ctrl+n",
		"command": "workbench.action.newWindow"
	},
	/* Ctrl+Shift+a: Search Tabs in Chrome */
	{ "command": "", "key": "ctrl+shift+a" },

	/* Sublime Text defaults */
	/* {"to": "brackets"} */
	{ "command": "noop", "key": "ctrl+m" }, // Toggle Tab Key Moves Focus
	{ "command": "noop", "key": "ctrl+shift+m" }, // View: Toggle Problems
	{
		"command": "editor.action.jumpToBracket", // move_to
		"key": "ctrl+m",
		"when": "editorTextFocus"
	},
	{
		"command": "editor.action.selectToBracket", // expand_selection
		"key": "ctrl+shift+m",
		"when": "editorTextFocus"
	},
	/* "toggle_comment", "block" */
	{
		"key": "ctrl+shift+/",
		"command": "editor.action.blockComment",
		"when": "editorTextFocus"
	},
	/* "split_selection_into_lines" */
	{ "command": "noop", "key": "ctrl+shift+l" },
	{
		"key": "ctrl+shift+l",
		"command": "editor.action.insertCursorAtEndOfEachLineSelected",
		"when": "textInputFocus && editorHasSelection"
	},

	/* Ctrl+D complements */
	{
		"key": "alt+d d",
		"command": "editor.action.selectHighlights",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+d",
		"command": "editor.action.addSelectionToPreviousFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k ctrl+shift+d",
		"command": "editor.action.moveSelectionToPreviousFindMatch",
		"when": "editorFocus"
	},

	/* Ctrl+L */
	{ "command": "", "key": "ctrl+l" },
	{
		"key": "ctrl+l",
		"command": "workbench.debug.panel.action.clearReplAction",
		"when": "inDebugRepl"
	},
	{
		"key": "ctrl+l",
		"command": "workbench.action.terminal.clear",
		"when": "terminalFocus"
	},

	/* Q */
	{
		"key": "ctrl+q",
		"command": "editor.action.showHover" // distinct from showDebugHover inDebugMode
	},
	/* jump to location of the search result */
	{
		"key": "ctrl+q",
		"command": "editor.action.revealDefinition",
		"when": "inSearchEditor"
	},
	/* Go to Definition */
	{
		"key": "ctrl+shift+q",
		"command": "editor.action.revealDefinition"
	},
	/* Replace Alt+R */
	{
		"key": "alt+q",
		"command": "toggleFindRegex",
		"when": "editorFocus"
	},
	{
		"key": "alt+q",
		"command": "toggleSearchRegex",
		"when": "searchViewletFocus"
	},
	{
		"key": "alt+q",
		"command": "toggleSearchEditorRegex",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "alt+q",
		"command": "workbench.action.terminal.toggleFindRegex",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},

	/* Optional search toggles for Mac */
	/* Opt+C */
	{
		"key": "alt+c",
		"command": "toggleFindCaseSensitive",
		"when": "editorFocus"
	},
	{
		"key": "alt+c",
		"command": "toggleSearchCaseSensitive",
		"when": "searchViewletFocus"
	},
	{
		"key": "alt+c",
		"command": "toggleSearchEditorCaseSensitive",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "alt+c",
		"command": "workbench.action.terminal.toggleFindCaseSensitive",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	/* Opt+W */
	{
		"key": "alt+w",
		"command": "toggleFindWholeWord",
		"when": "editorFocus"
	},
	{
		"key": "alt+w",
		"command": "toggleSearchWholeWord",
		"when": "searchViewletFocus"
	},
	{
		"key": "alt+w",
		"command": "toggleSearchEditorWholeWord",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "alt+w",
		"command": "workbench.action.terminal.toggleFindWholeWord",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	/* Opt+P */
	//{
	//	"key": "alt+p",
	//	"command": "togglePreserveCase",
	//	"when": "editorFocus"
	//},
	//{
	//	"key": "alt+p",
	//	"command": "toggleSearchPreserveCase",
	//	"when": "searchViewletFocus"
	//},
	{
		"key": "alt+p",
		"command": "keybindings.editor.toggleSortByPrecedence",
		"when": "inKeybindings"
	},

	/* Complement !+A */
	{
		"key": "alt+a",
		"command": "editor.action.commentLine"
	},

	/* take KB from Default Keyboard Shortcuts for Windows, but drop the "when" */
	{
		"key": "shift+alt+a",
		"command": "editor.action.blockComment"
	},
	{
		"key": "ctrl+/",
		"command": "editor.action.commentLine"
	},
	{
		"key": "ctrl+shift+\\",
		"command": "workbench.action.terminal.focusTabs"
	},
	{
		"key": "f9",
		"command": "editor.debug.action.toggleBreakpoint"
	},
	{
		"key": "shift+f9",
		"command": "editor.debug.action.toggleInlineBreakpoint"
	},
	{
		"key": "shift+alt+.",
		"command": "editor.action.autoFix"
	},
	{
		"key": "alt+pageup",
		"command": "scrollPageUp"
	},
	{
		"key": "alt+pagedown",
		"command": "scrollPageDown"
	},
	{
		"key": "ctrl+k ctrl+j",
		"command": "editor.unfoldAll"
	},

	/* ðŸ“œ */
	{
		"key": "ctrl+up",
		"command": "scrollLineUp",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+down",
		"command": "scrollLineDown",
		"when": "textInputFocus"
	},
	/* half a page */
	{
		"key": "Shift+Alt+PageUp",
		//"when": "editorFocus",
		"command": "editorScroll",
		"args": { "revealCursor": false, "by": "halfPage", "to": "up" }
	},
	{
		"key": "Shift+Alt+PageDown",
		//"when": "editorFocus",
		"command": "editorScroll",
		"args": { "revealCursor": false, "by": "halfPage", "to": "down" }
	},
	/* a numbered line (not "wrappedLine") */
	{
		"key": "Ctrl+Up",
		"when": "editorFocus && !editorHoverFocused",
		"command": "editorScroll",
		"args": { "revealCursor": false, "by": "line", "to": "up" }
	},
	{
		"key": "Ctrl+Down",
		"when": "editorFocus && !editorHoverFocused",
		"command": "editorScroll",
		"args": { "revealCursor": false, "by": "line", "to": "down" }
	},

	/* Unfold All Cells */
	{
		"key": "ctrl+k ctrl+j",
		"command": "macros.expandAllNotebookCells", /* ctf0.macros */
		"when": "activeEditor == 'workbench.editor.notebook' && !editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+j",
		"command": "macros.expandAllNotebookCells", /* ctf0.macros */
		"when": "activeEditor == 'workbench.editor.interactive'"
	},

	/* Find Action */
	{
		"key": "f3",
		"command": "editor.action.nextMatchFindAction"
	},
	{
		"key": "shift+f3",
		"command": "editor.action.previousMatchFindAction"
	},
	{
		"key": "f3",
		"command": "editor.action.webvieweditor.findNext",
		"when": "!panelFocus && activeEditor == 'WebviewEditor'"
	},
	{
		"key": "shift+f3",
		"command": "editor.action.webvieweditor.findPrevious",
		"when": "!panelFocus && activeEditor == 'WebviewEditor'"
	},
	{
		"key": "f3",
		"command": "workbench.action.terminal.findNext",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "shift+f3",
		"command": "workbench.action.terminal.findPrevious",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "ctrl+g",
		"command": "editor.action.goToMatchFindAction",
		"when": "findInputFocussed"
	},
	{
		"key": "cmd+g",
		"command": "editor.action.nextMatchFindAction"
	},
	{
		"key": "shift+cmd+g",
		"command": "editor.action.previousMatchFindAction"
	},
	{
		"key": "cmd+g",
		"command": "editor.action.webvieweditor.findNext",
		"when": "!panelFocus && activeEditor == 'WebviewEditor'"
	},
	{
		"key": "shift+cmd+g",
		"command": "editor.action.webvieweditor.findPrevious",
		"when": "!panelFocus && activeEditor == 'WebviewEditor'"
	},
	{
		"key": "cmd+g",
		"command": "workbench.action.terminal.findNext",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "shift+cmd+g",
		"command": "workbench.action.terminal.findPrevious",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "ctrl+f",
		"command": "workbench.action.terminal.focusFind",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "ctrl+f",
		"command": "repl.action.filter",
		"when": "focusedView == 'workbench.panel.repl.view'"
	},

	/* toggle treeFind */
	{
		"key": "ctrl+alt+f",
		"command": "",
		"when": "true"
	},
	{
		"key": "alt+/",
		"command": "\"list.find\" requires the list to support Tree Find",
		"when": "listFocus"
	},
	{
		"key": "alt+/",
		"command": "list.find",
		"when": "listFocus && listSupportsFind || inDebugRepl"
	},
	{
		"key": "alt+/",
		"command": "list.toggleFindMode",
		"when": "listFocus && listSupportsFind && treeFindOpen && inputFocus"
	},

	/* space in a tree */
	{
		"key": "ctrl+space",
		"command": "list.toggleSelection",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "shift+space",
		"command": "list.toggleSelection",
		"when": "listFocus && !inputFocus"
	},

	/* Ctrl+Shift+Arrow; remove all Ctrl+Alt+Arrow */
	{ "command": "noop", "key": "ctrl+alt+up" },
	{ "command": "noop", "key": "ctrl+alt+down" },
	{ "command": "noop", "key": "ctrl+alt+left" },
	{ "command": "noop", "key": "ctrl+alt+right" },
	{
		"key": "ctrl+shift+up",
		"command": "editor.action.insertCursorAbove",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+down",
		"command": "editor.action.insertCursorBelow",
		"when": "textInputFocus"
	},

	/* Zoom */
	{
		"key": "ctrl+alt+up",
		"command": "workbench.action.zoomIn"
	},
	{
		"key": "ctrl+alt+down",
		"command": "workbench.action.zoomOut"
	},
	{
		"key": "ctrl+alt+\\",
		"command": "workbench.action.zoomReset"
	},

	/* Alt+Arrow */
	{ "command": "", "key": "alt+left" }, // ?inQuickOpen: "workbench.action.quickInputBack"
	{ "command": "", "key": "alt+right" }, // ?inFilesPicker: Open to the Side

	/* Sublime Text defaults: "move", "by": "subword*s" */
	{
		"key": "alt+left",
		"command": "cursorWordPartLeft",
		"when": "textInputFocus"
	},
	{
		"key": "alt+right",
		"command": "cursorWordPartRight",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+left",
		"command": "cursorWordPartLeftSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+right",
		"command": "cursorWordPartRightSelect",
		"when": "textInputFocus"
	},

	/* subword rubout */
	{
		"key": "alt+backspace",
		"command": "deleteWordPartLeft",
		"when": "textInputFocus"
	},
	{
		"key": "alt+delete",
		"command": "deleteWordPartRight",
		"when": "textInputFocus"
	},

	/* alt+[KeyK] */
	{ "command": "noop", "key": "alt+k" },
	{
		"key": "alt+k",
		"command": "editor.action.smartSelect.expand",
		"when": "editorTextFocus"
	},
	//{
	//	"key": "alt+k",
	//	"command": "editor.emmet.action.balanceOut",
	//	"when": "editorTextFocus && editorLangId =~ /html|xml/"
	//},
	{
		"key": "alt+k",
		"command": "editor.emmet.action.balanceOut",
		"when": "editorTextFocus && editorLangId == 'svg'"
	},
	{
		"key": "alt+k",
		"command": "keybindings.editor.recordSearchKeys",
		"when": "inKeybindings && inKeybindingsSearch"
	},

	/* Reassign Ctrl+Up/Down when listFocus; Ctrl+Right to switch viewAs */
	{ "key": "ctrl+up", "when": "listFocus", "command": "noop" },
	{ "key": "ctrl+down", "when": "listFocus", "command": "noop" },
	{
		"key": "alt+up",
		"command": "list.scrollUp",
		"when": "listFocus && !inputFocus && !notebookCellListFocused"
	},
	{
		"key": "alt+down",
		"command": "list.scrollDown",
		"when": "listFocus && !inputFocus && !notebookCellListFocused"
	},
	{
		"key": "alt+left",
		"command": "list.scrollLeft",
		"when": "listFocus && !inputFocus && !notebookCellListFocused"
	},
	{
		"key": "alt+right",
		"command": "list.scrollRight",
		"when": "listFocus && !inputFocus && !notebookCellListFocused"
	},
	{
		"key": "ctrl+up",
		"command": "notebook.cell.focusOutOutput",
		"when": "notebookCellFocused"
	},
	{
		"key": "ctrl+down",
		"command": "notebook.cell.focusInOutput",
		"when": "notebookCellFocused"
	},
	/* Search Results */
	{
		"key": "ctrl+up",
		"command": "search.action.focusSearchFromResults",
		"when": "focusedView == 'workbench.view.search' && listFocus"
	},
	{
		"key": "ctrl+down",
		"command": "search.action.expandSearchResults",
		"when": "focusedView == 'workbench.view.search' && listFocus"
	},
	{
		"key": "ctrl+right",
		"command": "search.action.viewAsTree",
		"when": "focusedView == 'workbench.view.search' && listFocus && !inTreeView"
	},
	{
		"key": "ctrl+right",
		"command": "search.action.viewAsList",
		"when": "focusedView == 'workbench.view.search' && listFocus && inTreeView"
	},
	/* problematic view */
	{
		"key": "ctrl+up",
		"command": "problems.action.showSinglelineMessage",
		"when": "focusedView == 'workbench.panel.markers.view'"
	},
	{
		"key": "ctrl+down",
		"command": "problems.action.showMultilineMessage",
		"when": "focusedView == 'workbench.panel.markers.view'"
	},
	{
		"key": "ctrl+right",
		"command": "workbench.actions.table.workbench.panel.markers.view.viewAsTable",
		"when": "focusedView == 'workbench.panel.markers.view' && problemsViewMode == 'tree'"
	},
	{
		"key": "ctrl+right",
		"command": "workbench.actions.table.workbench.panel.markers.view.viewAsTree",
		"when": "focusedView == 'workbench.panel.markers.view' && problemsViewMode == 'table'"
	},

	/* Ctrl+Up/Down when !listFocus */
	{
		"key": "ctrl+down",
		"command": "breadcrumbs.selectFocused",
		"when": "breadcrumbsActive && !listFocus"
	},

	/* pour Mac: "ctrl" to be replaced with "cmd" in the "key" in order to override the default keybindings which go to an end of the line */
	/* Left */
	{
		"key": "ctrl+left",
		"command": "cursorWordLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+left",
		"command": "cursorWordLeftSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+left",
		"command": "breadcrumbs.focusPrevious",
		"when": "breadcrumbsActive"
	},
	{
		"key": "ctrl+backspace",
		"command": "deleteWordLeft",
		"when": "textInputFocus"
	},
	/* Right */
	{
		"key": "ctrl+right",
		"command": "cursorWordEndRight",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+right",
		"command": "cursorWordEndRightSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+right",
		"command": "breadcrumbs.focusNext",
		"when": "breadcrumbsActive"
	},
	{
		"key": "ctrl+delete",
		"command": "deleteWordRight",
		"when": "textInputFocus"
	},

	/* copyLines*Action: ensure Windows defaults */
	{ "command": "noop", "key": "ctrl+shift+alt+up" },
	{ "command": "noop", "key": "ctrl+shift+alt+down" },
	{ "command": "noop", "key": "ctrl+shift+alt+left" },
	{ "command": "noop", "key": "ctrl+shift+alt+right" },
	{ "command": "noop", "key": "shift+alt+up" },
	{ "command": "noop", "key": "shift+alt+down" },
	{
		"key": "shift+alt+up",
		"command": "editor.action.copyLinesUpAction",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+down",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+up",
		"command": "notebook.cell.copyUp",
		"when": "notebookCellFocused && !inputFocus"
	},
	{
		"key": "shift+alt+down",
		"command": "notebook.cell.copyDown",
		"when": "notebookCellFocused && !inputFocus"
	},

	/* peruse Problems */
	{
		"key": "alt+f8",
		"command": "editor.action.marker.nextInFiles"
	},
	{
		"key": "shift+alt+f8",
		"command": "editor.action.marker.prevInFiles"
	},
	/* in the present file */
	{
		"command": "editor.action.marker.next",
		"key": "ctrl+,"
	},
	{
		"command": "editor.action.marker.prev",
		"key": "shift+ctrl+,"
	},
	/* cycle Solutions (Quick Fixes) */
	{
		"key": "ctrl+.",
		"command": "selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},

	/* Retain F8 to Send Selected Text to Active Terminal */
	{
		"key": "f8",
		"command": "-editor.action.marker.nextInFiles"
	},
	{
		"key": "shift+f8",
		"command": "-editor.action.marker.prevInFiles"
	},
	{
		"key": "f8",
		"command": "workbench.action.terminal.runSelectedText",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+f8",
		"command": "PowerShell.RunSelection",
		"when": "editorTextFocus && editorLangId == 'powershell'"
	},
	{
		"key": "shift+f8",
		"command": "python.execSelectionInTerminal",
		"when": "editorTextFocus && editorLangId == 'python'"
	},
	{
		"key": "shift+f8",
		"command": "jupyter.execSelectionInteractive",
		"when": "editorTextFocus && jupyter.ownsSelection"
	},
	{ "command": "noop", "when": "editorTextFocus", "key": "shift+enter" },
	{
		"key": "f8",
		"command": "Command requires the Selection to be Single",
		"when": "editorHasMultipleSelections"
	},
	{
		"key": "shift+f8",
		"command": "Command requires the Selection to be Single",
		"when": "editorHasMultipleSelections"
	},
	{
		"key": "f8",
		"command": "Command requires codes to be selected and in-focus in Editor",
		"when": "!editorTextFocus || !editorHasSelection"
	},
	{
		"key": "shift+f8",
		"command": "Command requires codes to be selected and in-focus in Editor",
		"when": "!editorTextFocus || !editorHasSelection"
	},
	{
		"key": "f8",
		"command": "",
		"when": "terminalFocus"
	},
	{
		"key": "shift+f8",
		"command": "",
		"when": "terminalFocus"
	},
	{ "command": "noop", "when": "terminalFocus && terminalTextSelectedInFocused", "key": "f8" },
	{ "command": "noop", "when": "terminalFocus && terminalTextSelectedInFocused", "key": "shift+f8" },

	/* notebookType == 'interactive' */
	{ "command": "-interactive.execute", "key": "meta+enter" },
	{ "command": "-interactive.execute", "key": "shift+enter" },
	{
		"key": "shift+enter",
		"command": "interactive.execute",
		"when": "activeEditor == 'workbench.editor.interactive' && editorTextFocus && !notebookCellFocused"
	},
	{
		"key": "ctrl+up",
		"command": "interactive.history.previous",
		"when": "activeEditor == 'workbench.editor.interactive' && editorTextFocus && !notebookCellFocused"
	},
	{
		"key": "ctrl+down",
		"command": "interactive.history.next",
		"when": "activeEditor == 'workbench.editor.interactive' && editorTextFocus && !notebookCellFocused"
	},

	/* Accept Next of Inline Suggestion */
	{
		"key": "ctrl+right",
		"command": "editor.action.inlineSuggest.acceptNextWord",
		"when": "inlineSuggestionVisible && editorTextFocus"
	},
	{
		"key": "shift+enter",
		"command": "editor.action.inlineSuggest.acceptNextLine",
		"when": "inlineSuggestionVisible && editorTextFocus"
	},

	/* Ctrl+[][]: jump to next/prev; abjure any-and-all non-Debug usage of F5 */
	{ "command": "noop", "key": "ctrl+]" },
	{ "command": "noop", "key": "ctrl+[" },
	{ "command": "noop", "key": "alt+f5" },
	{ "command": "noop", "key": "shift+alt+f5" },
	{
		"key": "ctrl+]",
		"command": "workbench.action.editor.nextChange"
	},
	{
		"key": "ctrl+[",
		"command": "workbench.action.editor.previousChange"
	},
	{
		"key": "ctrl+]",
		"command": "merge-conflict.next",
		"when": "mergeConflictsCount > 0"
	},
	{
		"key": "ctrl+[",
		"command": "merge-conflict.previous",
		"when": "mergeConflictsCount > 0"
	},
	{
		"key": "ctrl+]",
		"command": "references-view.next",
		"when": "reference-list.hasResult && (activeViewlet == 'workbench.view.extension.references-view' || activeAuxiliary == 'workbench.view.extension.references-view')"
	},
	{
		"key": "ctrl+[",
		"command": "references-view.prev",
		"when": "reference-list.hasResult && (activeViewlet == 'workbench.view.extension.references-view' || activeAuxiliary == 'workbench.view.extension.references-view')"
	},
	{
		"key": "ctrl+]",
		"command": "search.action.focusNextSearchResult",
		"when": "hasSearchResult && searchViewletVisible || inSearchEditor"
	},
	{
		"key": "ctrl+[",
		"command": "search.action.focusPreviousSearchResult",
		"when": "hasSearchResult && searchViewletVisible || inSearchEditor"
	},
	{
		"key": "ctrl+]",
		"command": "merge.goToNextConflict",
		"when": "activeEditor == 'mergeEditor'"
	},
	{
		"key": "ctrl+[",
		"command": "merge.goToPreviousConflict",
		"when": "activeEditor == 'mergeEditor'"
	},
	{
		"key": "ctrl+]",
		"command": "workbench.action.compareEditor.nextChange",
		"when": "textCompareEditorActive"
	},
	{
		"key": "ctrl+[",
		"command": "workbench.action.compareEditor.previousChange",
		"when": "textCompareEditorActive"
	},
	{
		"key": "ctrl+]",
		"command": "goToNextReference",
		"when": "referenceSearchVisible"
	},
	{
		"key": "ctrl+[",
		"command": "goToPreviousReference",
		"when": "referenceSearchVisible"
	},

	/* Alt+[][] */
	{ "command": "noop", "key": "alt+]" },
	{ "command": "noop", "key": "alt+[" },
	{
		"key": "alt+]",
		"command": "editor.gotoNextFold",
		"when": "editorFocus"
	},
	{
		"key": "alt+[",
		"command": "editor.gotoPreviousFold",
		"when": "editorFocus"
	},
	{
		"key": "alt+]",
		"command": "editor.action.inlineSuggest.showNext",
		"when": "inlineSuggestionVisible"
	},
	{
		"key": "alt+[",
		"command": "editor.action.inlineSuggest.showPrevious",
		"when": "inlineSuggestionVisible"
	},
	{
		"key": "shift+alt+]",
		"command": "editor.action.diffReview.next"
	},
	{
		"key": "shift+alt+[",
		"command": "editor.action.diffReview.prev"
	},
	{
		"key": "shift+alt+]",
		"command": "macros.diffReview.next", /* ctf0.macros */
		"when": "activeEditor =~ /DiffEditor$/ && !isInDiffEditor"
	},
	{
		"key": "shift+alt+[",
		"command": "macros.diffReview.prev", /* ctf0.macros */
		"when": "activeEditor =~ /DiffEditor$/ && !isInDiffEditor"
	},

	/* vim-like panes navigation */
	{ "key": "ctrl+k k", "command": "workbench.action.navigateUp" },
	{ "key": "ctrl+k j", "command": "workbench.action.navigateDown" },
	{ "key": "ctrl+k h", "command": "workbench.action.navigateLeft" },
	{ "key": "ctrl+k l", "command": "workbench.action.navigateRight" },

	/* moveEditorâ†’Group */
	{
		"key": "ctrl+k shift+k",
		"command": "workbench.action.moveEditorToAboveGroup"
	},
	{
		"key": "ctrl+k shift+j",
		"command": "workbench.action.moveEditorToBelowGroup"
	},
	{
		"key": "ctrl+k shift+h",
		"command": "workbench.action.moveEditorToLeftGroup"
	},
	{
		"key": "ctrl+k shift+l",
		"command": "workbench.action.moveEditorToRightGroup"
	},

	/* restrict next/prev editor to in-group */
	{
		"key": "ctrl+pageup",
		"command": "workbench.action.previousEditorInGroup"
	},
	{
		"key": "ctrl+pagedown",
		"command": "workbench.action.nextEditorInGroup"
	},

	/* Ctrl+Shift+Page */
	{
		"key": "ctrl+shift+pageup",
		"command": "workbench.action.previousSideBarView"
	},
	{
		"key": "ctrl+shift+pagedown",
		"command": "workbench.action.nextSideBarView"
	},
	{
		"key": "ctrl+shift+pageup",
		"command": "workbench.action.moveEditorLeftInGroup",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+pagedown",
		"command": "workbench.action.moveEditorRightInGroup",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+pageup",
		"command": "workbench.action.previousPanelView",
		"when": "panelFocus"
	},
	{
		"key": "ctrl+shift+pagedown",
		"command": "workbench.action.nextPanelView",
		"when": "panelFocus"
	},

	/* Split Editor */
	{
		"key": "ctrl+k shift+\\",
		"command": "workbench.action.splitEditorLeft"
	},

	/* antipode to Ctrl+Grave */
	{
		"key": "alt+`",
		"command": "workbench.action.focusActiveEditorGroup"
	},
	{
		"key": "cmd+escape",
		"command": "workbench.action.focusActiveEditorGroup"
	},
	{
		"key": "alt+`",
		"command": "workbench.action.focusQuickOpen",
		"when": "inQuickOpen"
	},
	{
		"key": "cmd+escape",
		"command": "workbench.action.focusQuickOpen",
		"when": "inQuickOpen"
	},

	/* Alt+[09] */
	{
		"key": "alt+0",
		"command": "workbench.action.focusActiveEditorGroup"
	},
	{
		"key": "alt+9",
		"command": "workbench.action.lastEditorInGroup"
	},
	{
		"key": "shift+alt+0",
		"command": "workbench.action.focusOtherSideEditor"
	},
	{
		"key": "shift+alt+0",
		"command": "diffEditor.switchSide",
		"when": "activeEditor =~ /DiffEditor$/ && editorFocus"
	},
	{
		"key": "shift+alt+0",
		"command": "togglePeekWidgetFocus",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},

	/* extra Optional shortcuts */
	{ "key": "shift+alt+1", "command": "type", "args": { "text": "Â¡" }, "when": "textInputFocus" },
	{ "key": "shift+alt+2", "command": "type", "args": { "text": "Â²" }, "when": "textInputFocus" },
	{ "key": "shift+alt+7", "command": "type", "args": { "text": "â„–" }, "when": "textInputFocus" },
	{ "key": "shift+alt+x", "command": "type", "args": { "text": "Ã—" }, "when": "textInputFocus" },
	{ "key": "alt+1", "command": "workbench.action.openEditorAtIndex1" },
	{ "key": "alt+2", "command": "workbench.action.openEditorAtIndex2" },
	{ "key": "alt+3", "command": "workbench.action.openEditorAtIndex3" },
	{ "key": "alt+4", "command": "workbench.action.openEditorAtIndex4" },

	/* [VS] View.Navigate */
	{
		"key": "ctrl+-",
		"command": "workbench.action.navigateBack"
	},
	{
		"key": "ctrl+shift+-",
		"command": "workbench.action.navigateForward"
	},
	{
		"key": "ctrl+shift+[",
		"command": "workbench.action.navigateBackInEditLocations"
	},
	{
		"key": "ctrl+shift+]",
		"command": "workbench.action.navigateForwardInEditLocations"
	},
	{
		"key": "ctrl+=",
		"command": "workbench.action.navigateBackInNavigationLocations"
	},
	{
		"key": "ctrl+shift+=",
		"command": "workbench.action.navigateForwardInNavigationLocations"
	},
	/* ?panelFocus */
	{
		"key": "ctrl+shift+]",
		"command": "workbench.action.nextPanelView",
		"when": "panelFocus"
	},
	{
		"key": "ctrl+shift+[",
		"command": "workbench.action.previousPanelView",
		"when": "panelFocus"
	},

	/* Ctrl+k es */
	{ "command": "noop", "key": "ctrl+k s" },
	{ "command": "noop", "key": "ctrl+k ctrl+s" },
	{ "command": "noop", "key": "ctrl+k ctrl+alt+s" },
	{ "command": "noop", "key": "ctrl+k ctrl+shift+s" },

	/* Ctrl+k # */
	{
		"key": "ctrl+k 1",
		"command": "workbench.view.explorer"
	},
	{
		"key": "ctrl+k 1",
		"command": "workbench.action.saveWorkspaceAs",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.explorer'"
	},
	{
		"key": "ctrl+k 2",
		"command": "workbench.view.search"
	},
	{
		"key": "ctrl+k 2",
		"command": "search.action.openNewEditor",
		"when": "focusedView == 'workbench.view.search'"
	},
	{
		"key": "ctrl+k 3",
		"command": "workbench.view.scm"
	},
	{
		"key": "ctrl+k 3",
		"command": "git-graph.view",
		"when": "focusedView == 'workbench.scm'"
	},
	{
		"key": "ctrl+k 4",
		"command": "workbench.view.debug"
	},
	{
		"key": "ctrl+k 4",
		"command": "workbench.debug.action.focusRepl",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.debug' || auxiliaryBarFocus && activeAuxiliary == 'workbench.view.debug'"
	},
	{
		"key": "ctrl+k 5",
		"command": "workbench.action.quickTextSearch"
	},
	{
		"key": "ctrl+k 6",
		"command": "workbench.view.extensions"
	},

	/* Ctrl+r */
	{
		"key": "ctrl+r",
		"command": "workbench.action.openRecent"
	},
	{
		"key": "ctrl+r",
		"command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
		"when": "inQuickOpen && inRecentFilesPicker"
	},
	{
		"key": "ctrl+shift+r",
		"command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
		"when": "inQuickOpen && inRecentFilesPicker"
	},
	/* ?isDevelopment */
	{
		"key": "ctrl+k shift+r",
		"command": "workbench.action.reloadWindow",
		//"when": "isDevelopment"
	},
	/* Ctrl+k r */
	{ "command": "revealInExplorer", "key": "ctrl+k r" },
	/* Ctrl+k Ctrl+r */
	{ "command": "noop", "key": "ctrl+k ctrl+r" },
	{
		"key": "ctrl+k ctrl+r",
		"command": "workbench.files.action.refreshFilesExplorer",
		"when": "activeViewlet == 'workbench.view.explorer'"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "search.action.refreshSearchResults",
		"when": "activeViewlet == 'workbench.view.search'"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "git.refresh",
		"when": "activeViewlet == 'workbench.view.scm'"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "remote-containers.explorerDetailsRefresh",
		"when": "activeViewlet == 'workbench.view.remote' && view.detailsContainers.visible"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "remote-containers.explorerTargetsRefresh",
		"when": "activeViewlet == 'workbench.view.remote' && view.targetsContainers.visible"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "workbench.extensions.action.refreshExtension",
		"when": "activeViewlet == 'workbench.view.extensions'"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "references-view.refresh",
		"when": "activeViewlet == 'workbench.view.extension.references-view'"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "bookmarks.refresh",
		"when": "activeViewlet == 'workbench.view.extension.bookmarks'"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "todo-tree.refresh",
		"when": "activeViewlet == 'workbench.view.extension.todo-tree-container'"
	},

	/* File: Open */
	{ "key": "ctrl+k o", "command": "workbench.action.files.openFolder" },
	{ "key": "ctrl+k ctrl+o", "command": "addRootFolder" },
	{
		"key": "ctrl+shift+o",
		"command": "workbench.action.openWorkspace"
	},

	/* selection anchor */
	{ "command": "noop", "key": "ctrl+k ctrl+k" },
	{ "command": "noop", "key": "ctrl+k Escape" },
	{
		"key": "ctrl+k ctrl+k",
		"command": "editor.action.selectFromAnchorToCursor",
		"when": "editorTextFocus && selectionAnchorSet"
	},
	{
		"key": "ctrl+k ctrl+g",
		"command": "editor.action.goToSelectionAnchor",
		"when": "editorTextFocus && selectionAnchorSet"
	},

	/* Menu Bar mnemonics */
	{ "command": "", "key": "alt+f" }, // File
	{ "command": "", "key": "shift+alt+f" },
	{ "command": "", "key": "alt+e" }, // Edit
	{ "command": "", "key": "shift+alt+e" },
	{ "command": "", "key": "alt+s" }, // Selection
	{ "command": "", "key": "shift+alt+s" },
	{ "command": "", "key": "alt+v" }, // View
	{ "command": "", "key": "shift+alt+v" },
	{ "command": "", "key": "alt+g" }, // Go
	{ "command": "", "key": "shift+alt+g" },
	{ "command": "", "key": "alt+r" }, // Run
	{ "command": "", "key": "shift+alt+r" },
	{ "command": "", "key": "alt+t" }, // Terminal
	{ "command": "", "key": "shift+alt+t" },
	{ "command": "", "key": "alt+h" }, // Help
	{ "command": "", "key": "shift+alt+h" },

	/* Peeking */
	{
		"key": "ctrl+k y",
		"command": "editor.action.peekTypeDefinition",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k a",
		"command": "editor.showCallHierarchy",
		"when": "editorFocus"
	},

	/* Hierarchy */
	/* references-view */
	{
		"key": "ctrl+k ctrl+h",
		"command": "references-view.showCallHierarchy",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+h",
		"command": "references-view.pickFromHistory",
		"when": "focusedView == 'references-view.tree'"
	},
	{
		"key": "ctrl+up",
		"command": "references-view.showIncomingCalls",
		"when": "focusedView == 'references-view.tree' && reference-list.source == 'callHierarchy'" // references-view.callHierarchyMode != 'showIncoming'
	},
	{
		"key": "ctrl+down",
		"command": "references-view.showOutgoingCalls",
		"when": "focusedView == 'references-view.tree' && reference-list.source == 'callHierarchy'" // references-view.callHierarchyMode != 'showOutgoing'
	},
	/* 'javaTypeHierarchy' */
	{
		"key": "ctrl+k y",
		"command": "java.action.showTypeHierarchy",
		"when": "editorLangId == 'java'"
	},
	{
		"key": "ctrl+up",
		"command": "java.action.showSupertypeHierarchy",
		"when": "focusedView == 'references-view.tree' && reference-list.source == 'javaTypeHierarchy'" // typeHierarchyDirection != 'parents'
	},
	{
		"key": "ctrl+down",
		"command": "java.action.showSubtypeHierarchy",
		"when": "focusedView == 'references-view.tree' && reference-list.source == 'javaTypeHierarchy'" // typeHierarchyDirection != 'children'
	},
	{
		"key": "ctrl+right",
		"command": "java.action.showClassHierarchy",
		"when": "focusedView == 'references-view.tree' && reference-list.source == 'javaTypeHierarchy'" // typeHierarchyDirection != 'both'
	},

	/* Ctrl+(Shift+)j */
	/* Mac default: ^J for Join */
	{
		"key": "ctrl+j",
		"command": "editor.action.joinLines",
		//"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+j",
		"command": "notebook.cell.joinBelow",
		"when": "notebookCellFocused && !inputFocus"
	},
	/* Toggle Panel Visibility */
	{
		"key": "ctrl+shift+j",
		"command": "workbench.action.togglePanel"
	},
	{ "command": "", "key": "ctrl+b" },
	{
		"key": "ctrl+shift+b",
		"command": "workbench.action.toggleSidebarVisibility"
	},

	/* Emmet */
	{
		"key": "alt+d e",
		"command": "workbench.action.showEmmetCommands",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+d i",
		"command": "editor.emmet.action.updateImageSize",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+m",
		"command": "editor.emmet.action.matchTag",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+d u",
		"command": "editor.emmet.action.updateTag",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+d .",
		"command": "editor.emmet.action.wrapWithAbbreviation",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+d /",
		"command": "editor.emmet.action.removeTag",
		"when": "editorTextFocus"
	},

	/* Do not let hijack bindings that are key when "textInputFocus" */
	{
		"key": "ctrl+home",
		"command": "cursorTop",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+end",
		"command": "cursorBottom",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+l",
		"command": "expandLineSelection",
		"when": "textInputFocus"
	},
	/* down/up may be hijacked by history.next/prev */
	{
		"key": "up",
		"command": "cursorUp",
		"when": "textInputFocus && !suggestWidgetVisible"
	},
	{
		"key": "down",
		"command": "cursorDown",
		"when": "textInputFocus && !suggestWidgetVisible"
	},
	{
		"key": "alt+up",
		"command": "workbench.action.terminal.chat.previousFromHistory",
		"when": "terminalChatFocus"
	},
	{
		"key": "alt+down",
		"command": "workbench.action.terminal.chat.nextFromHistory",
		"when": "terminalChatFocus"
	},
	/* "ctrl+enter" may be hijacked by accept/commit */
	{ "key": "cmd+enter", "command": "-editor.action.replaceAll" },
	{
		"key": "ctrl+enter",
		"command": "editor.action.insertLineAfter",
		"when": "textInputFocus"
	},
	{ "command": "noop", "key": "ctrl+shift+enter" }, // shy from "search.action.replaceAllIn*"
	{
		"key": "ctrl+shift+enter",
		"command": "editor.action.insertLineBefore",
		"when": "textInputFocus"
	},

	/* Ctrl+E; Mac default for Cmd+E is "actions.findWithSelection" */
	{
		"key": "ctrl+e",
		"command": "workbench.action.quickOpen"
	},
	{
		"key": "ctrl+e",
		"command": "workbench.action.quickOpenNavigateNextInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},

	/* shifted in a Picker */
	{
		"key": "ctrl+shift+e",
		"command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+shift+p",
		"command": "workbench.action.quickOpenNavigateNext",
		"when": "inCommandsPicker && inQuickOpen"
	},

	/* Ctrl+Shift+f: Focus the Search Viewlet */
	{ "command": "workbench.view.search.focus", "key": "ctrl+shift+f" },

	/* Ctrl+Shift+c */
	{ "command": "noop", "key": "ctrl+shift+c" },
	/* Reset the View ( Clear ) */
	{
		"key": "ctrl+shift+c",
		"command": "macros.resetExplorerView", /* ctf0.macros */
		"when": "activeViewlet == 'workbench.view.explorer'"
	},
	{
		"key": "ctrl+shift+c",
		"command": "references-view.clear",
		"when": "activeViewlet == 'workbench.view.extension.references-view'"
	},
	{
		"key": "ctrl+shift+c",
		"command": "todo-tree.filterClear",
		"when": "activeViewlet == 'workbench.view.extension.todo-tree-container'"
	},
	{
		"key": "ctrl+shift+c",
		"command": "workbench.extensions.action.clearExtensionsSearchResults",
		"when": "activeViewlet == 'workbench.view.extensions'"
	},
	{
		"key": "ctrl+shift+c",
		"command": "search.action.clearSearchResults",
		"when": "searchViewletVisible"
	},

	/* Ctrl+Alt+Letter */
	{
		"key": "ctrl+alt+m",
		"command": "workbench.action.showAllEditorsByMostRecentlyUsed"
	},
	{
		"key": "ctrl+alt+r",
		"command": "macros.renamePresentFile", /* ctf0.macros */
		//"when": "resourceScheme == 'file'"
	},
	{
		"key": "ctrl+alt+r",
		"command": "workbench.action.terminal.runRecentCommand",
		"when": "terminalFindFocused || terminalFocus || terminalTabsFocus"
	},
	{
		"key": "ctrl+alt+n",
		"command": "list.focusAnyDown"
	},
	{
		"key": "ctrl+alt+p",
		"command": "list.focusAnyUp"
	},
	{
		"key": "ctrl+alt+a",
		"command": "workbench.action.quickOpen"
	},
	{
		"key": "ctrl+alt+x",
		"command": "workbench.action.inspectContextKeys"
	},

	/* v1.57 release removed this kb */
	{
		"key": "ctrl+w",
		"command": "workbench.action.closeWindow",
		"when": "!editorIsOpen && !multipleEditorGroups"
	},

	/* Ctrl+F4 is by default not bound under Linux */
	{
		"key": "ctrl+f4",
		"command": "workbench.action.closeActiveEditor"
	},
	{
		"key": "ctrl+f4",
		"command": "workbench.action.closeGroup",
		"when": "activeEditorGroupEmpty"
	},

	/* terminal.kill[Editor] */
	{
		"key": "ctrl+f4",
		"command": "workbench.action.terminal.kill",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus" // "panelFocus && activePanel == 'terminal'"
	},
	{
		"key": "ctrl+f4",
		"command": "workbench.action.terminal.killEditor",
		"when": "terminalEditorActive"
	},

	/* Terminal */
	/* Emacs-mode shortcuts for readline/zle */
	{ "command": "", "key": "ctrl+e", "when": "terminalFocus" },
	{ "command": "", "key": "ctrl+a", "when": "terminalFocus" },
	{ "command": "", "key": "ctrl+["
	, "when": "terminalFindFocused || terminalFocus || terminalTabsFocus" },
	{ "command": "", "key": "ctrl+]"
	, "when": "terminalFindFocused || terminalFocus || terminalTabsFocus" },
	{ "command": "", "key": "ctrl+c"
	, "when": "terminalFindFocused || terminalFocus || terminalTabsFocus" },
	{
		"key": "ctrl+g",
		"command": "workbench.action.terminal.goToRecentDirectory",
		"when": "terminalFindFocused || terminalFocus || terminalTabsFocus"
	},
	{ "command": "", "key": "ctrl+h"
	, "when": "terminalFindFocused || terminalFocus || terminalTabsFocus" },
	{ "command": "", "key": "ctrl+n"
	, "when": "terminalFindFocused || terminalFocus || terminalTabsFocus" },
	{ "command": "", "key": "ctrl+p"
	, "when": "terminalFindFocused || terminalFocus || terminalTabsFocus" },
	{ "command": "", "key": "ctrl+q"
	, "when": "terminalFindFocused || terminalFocus || terminalTabsFocus" },
	{ "command": "", "key": "ctrl+r"
	, "when": "terminalFindFocused || terminalFocus || terminalTabsFocus" },
	{ "command": "", "key": "ctrl+s"
	, "when": "terminalFindFocused || terminalFocus || terminalTabsFocus" },
	{ "command": "", "key": "ctrl+v"
	, "when": "terminalFindFocused || terminalFocus || terminalTabsFocus" },
	{ "command": "", "key": "ctrl+w"
	, "when": "terminalFindFocused || terminalFocus || terminalTabsFocus" },
	/* terminal.sendSequence */
	{
		"key": "ctrl+z",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalTabsFocus",
		"args": { "text": "\u001a" } // ^Z
	},
	{
		"key": "ctrl+shift+z", // default is "ctrl+shift+2"
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus || terminalTabsFocus",
		"args": { "text": "\u0000" }
	},
	{
		"key": "ctrl+/",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFindFocused || terminalFocus || terminalTabsFocus",
		"args": { "text": "\u001f" } // readline undo
	},
	{
		"key": "tab",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus && terminalShellType == 'python'",
		"args": { "text": "\u0020\u0020\u0020\u0020" }
	},
	{
		"key": "shift+tab",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus && terminalShellType == 'python'",
		"args": { "text": "\u007f\u007f\u007f\u007f" }
	},
	{
		"key": "ctrl+shift+9",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus && terminalShellType == 'python'",
		"args": { "text": ")\u001b[H(\u001b[H" }
	},
	{
		"key": "alt+n",
		"command": "workbench.action.terminal.sendSequence",
		"when": "!isMac && (terminalFocus || terminalTabsFocus)",
		"args": { "text": "\u001b[B" } // Arrow Down
	},
	{
		"key": "alt+p",
		"command": "workbench.action.terminal.sendSequence",
		"when": "!isMac && (terminalFocus || terminalTabsFocus)",
		"args": { "text": "\u001b[A" } // Arrow Up
	},
	/* terminal.select */
	{
		"key": "shift+alt+a",
		"command": "workbench.action.terminal.selectAll",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "ctrl+shift+up",
		"command": "workbench.action.terminal.selectToPreviousCommand",
		"when": "terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "ctrl+shift+down",
		"command": "workbench.action.terminal.selectToNextCommand",
		"when": "terminalFindFocused || terminalTabsFocus"
	},
	/* terminal.scroll */
	{
		"key": "ctrl+up",
		"command": "workbench.action.terminal.scrollToPreviousCommand",
		"when": "terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "ctrl+down",
		"command": "workbench.action.terminal.scrollToNextCommand",
		"when": "terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "alt+up",
		"command": "workbench.action.terminal.scrollUp",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "alt+down",
		"command": "workbench.action.terminal.scrollDown",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "shift+pageup",
		"command": "workbench.action.terminal.scrollUpPage",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "shift+pagedown",
		"command": "workbench.action.terminal.scrollDownPage",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "ctrl+home",
		"command": "workbench.action.terminal.scrollToTop",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "ctrl+end",
		"command": "workbench.action.terminal.scrollToBottom",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	/* Navigate panes/groups/tabs */
	{
		"key": "alt+left",
		"command": "workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && !terminalEditorActive || terminalTabsFocus"
	},
	{
		"key": "alt+right",
		"command": "workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && !terminalEditorActive || terminalTabsFocus"
	},
	{
		"key": "ctrl+pageup",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalFindFocused || terminalFocus || terminalTabsFocus"
	},
	{
		"key": "ctrl+pagedown",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalFindFocused || terminalFocus || terminalTabsFocus"
	},
	{
		"key": "ctrl+pageup",
		"command": "workbench.action.previousEditorInGroup",
		"when": "terminalEditorActive"
	},
	{
		"key": "ctrl+pagedown",
		"command": "workbench.action.nextEditorInGroup",
		"when": "terminalEditorActive"
	},
	/* [un]split */
	{
		"key": "ctrl+clear",
		"command": "workbench.action.terminal.split",
		"when": "terminalFindFocused || terminalFocus || terminalTabsFocus"
	},
	{
		"key": "ctrl+shift+clear",
		"command": "workbench.action.terminal.unsplit",
		"when": "terminalFindFocused || terminalFocus || terminalTabsFocus"
	},

	/* Terminal: Switch */
	/* Focus Active Terminal */
	{
		"key": "ctrl+\\",
		"command": "workbench.action.terminal.focus"
	},
	/* back to Editor away from Terminal in Terminal View */
	{
		"key": "ctrl+\\",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "terminalFocus && !terminalEditorActive"
	},
	/* Create New Terminal in Editor Area */
	{
		"key": "ctrl+\\",
		"command": "workbench.action.createTerminalEditor",
		"when": "!terminalIsOpen"
	},
	/* back to Editor away from Terminal in Editor Area */
	{
		"key": "ctrl+\\",
		"command": "workbench.action.openPreviousRecentlyUsedEditor",
		"when": "terminalFocus && terminalEditorActive"
	},
	/* Ctrl+Grave: Focus Terminal in Terminal View */
	{
		"key": "ctrl+`",
		"command": "terminal.focus"
	},
	{
		"key": "ctrl+`",
		"command": "workbench.action.quickOpenTerm",
		"when": "inTerminalPicker || terminalFocus && !terminalEditorActive"
	},
	/* Toggle Terminal View */
	{
		"key": "ctrl+\\",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "!terminalProcessSupported && !terminalHasBeenCreated"
	},

	/* View: Toggle Sizes */
	{
		"key": "shift+alt+enter",
		"command": "workbench.action.toggleCenteredLayout"
	},
	{
		"key": "shift+alt+enter",
		"command": "workbench.action.toggleSidebarVisibility",
		"when": "activeEditor =~ /DiffEditor$/ && config.diffEditor.renderSideBySide"
	},
	{
		"key": "shift+alt+enter",
		"command": "workbench.action.toggleEditorWidths",
		"when": "multipleEditorGroups"
	},
	{
		"key": "shift+alt+enter",
		"command": "workbench.action.toggleMaximizedPanel",
		"when": "panelFocus || panelMaximized"
	},
	{
		"key": "shift+alt+enter",
		"command": "workbench.action.toggleMaximizedPanel",
		"when": "panelVisible"
	},

	/* dbankier.vscode-quick-select */
	{
		"key": "ctrl+k ctrl+;",
		"command": "extension.selectEitherQuote",
		"when": "editorFocus"
	},

	/* alefragnani.Bookmarks */
	{ "command": "noop", "key": "ctrl+alt+j" },
	{ "command": "noop", "key": "ctrl+alt+k" },
	{ "command": "noop", "key": "ctrl+alt+l" },
	{ "command": "noop", "key": "shift+alt+j" },
	{ "command": "noop", "key": "shift+alt+k" },
	{ "command": "noop", "key": "shift+alt+l" },
	{
		"key": "ctrl+k 8",
		"command": "workbench.view.extension.bookmarks"
	},
	{
		"key": "shift+alt+k",
		"command": "bookmarks.toggle",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+l",
		"command": "bookmarks.toggleLabeled",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+n",
		"command": "bookmarks.jumpToNext"
	},
	{
		"key": "shift+alt+p",
		"command": "bookmarks.jumpToPrevious"
	},

	/* alefragnani.Bookmarks is dysfunctional when "activeEditor =~ /^workbench\\.editor\\.(notebook|interactive)$/" */
	/* Notebook Cell commands */
	{
		"key": "shift+alt+j",
		"command": "notebook.cell.execute",
		"when": "notebookCellFocused && !notebookCellExecuting && notebookCellType == 'code'"
	},
	{
		"key": "shift+alt+k",
		"command": "notebook.revealRunningCell",
		"when": "activeEditor =~ /^workbench\\.editor\\.(notebook|interactive)$/"
	},
	{
		"key": "shift+alt+l",
		"command": "notebook.cell.focusOutOutput",
		"when": "activeEditor =~ /^workbench\\.editor\\.(notebook|interactive)$/"
	},
	{
		"key": "shift+alt+l",
		"command": "notebook.cell.toggleLineNumbers",
		"when": "notebookCellEditorFocused"
	},
	{
		"key": "shift+alt+n",
		"command": "notebook.focusNextEditor",
		"when": "activeEditor =~ /^workbench\\.editor\\.(notebook|interactive)$/"
	},
	{
		"key": "shift+alt+p",
		"command": "notebook.focusPreviousEditor",
		"when": "activeEditor =~ /^workbench\\.editor\\.(notebook|interactive)$/"
	},

	/* Shift+Alt+Letter */
	{
		"key": "shift+alt+c",
		"command": "copyRelativeFilePath"
	},
	{
		"key": "shift+alt+c",
		"command": "workbench.action.terminal.copyLastCommandOutput",
		"when": "terminalFindFocused || terminalFocus || terminalTabsFocus"
	},
	{
		"key": "shift+alt+j",
		"command": "inlineChat.acceptChanges",
		"when": "inlineChatVisible && !inlineChatHasActiveRequest"
	},
	{
		"key": "shift+alt+j",
		"command": "workbench.action.terminal.chat.runCommand",
		"when": "terminalChatFocus && !terminalChatActiveRequest && terminalChatResponseContainsCodeBlock && !terminalChatResponseContainsMultipleCodeBlocks"
	},
	{
		"key": "shift+alt+j",
		"command": "Terminal Chat: multiple code blocks present", // workbench.action.terminal.chat.runFirstCommand
		"when": "terminalChatResponseContainsMultipleCodeBlocks"
	},
	/* ?inQuickOpen */
	{
		"key": "shift+alt+j",
		"command": "workbench.action.acceptSelectedQuickOpenItem",
		"when": "inQuickOpen"
	},
	{
		"key": "shift+alt+n",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "shift+alt+p",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},

	/* file-ext-switcher */
	{
		"key": "shift+alt+,",
		"command": "fileextswitch",
		"args": {
			"extensions": [
				".aspx",
				".aspx.cs",
				".ts",
				".html",
				".css",
				".scss",
				".spec.ts",
			],
			//"useOtherColumn": true
		}
	},

	/* Ctrl+Alt+j */
	{
		"key": "ctrl+alt+j",
		"command": "github.copilot.chat.attachFile",
		"when": "view.workbench.panel.chat.view.copilot.visible"
	},
	{
		"key": "ctrl+alt+j",
		"command": "markdown.showSource",
		"when": "activeWebviewPanelId == 'markdown.preview' || activeWebviewPanelId == 'vscode.markdown.preview.editor'"
	},
	{
		"key": "ctrl+alt+j",
		"command": "macros.focusEditor", /* ctf0.macros */
		"when": "panelFocus || panelMaximized"
	},
	{
		"key": "ctrl+alt+j",
		"command": "workbench.action.openActiveLogOutputFile",
		"when": "panelFocus && activePanel == 'workbench.panel.output'" // resourceScheme == 'output'
	},
	{
		"key": "ctrl+alt+j",
		"command": "workbench.action.openGlobalKeybindingsFile",
		"when": "inKeybindings"
	},
	{
		"key": "ctrl+alt+j",
		"command": "settings.switchToJSON",
		"when": "inSettingsEditor"
	},
	/* instead of ^+J */
	{
		"key": "ctrl+alt+j",
		"command": "workbench.action.search.toggleQueryDetails",
		"when": "inSearchEditor || searchViewletFocus"
	},

	/* ryu1kn.text-marker */
	{ "command": "noop", "key": "ctrl+0" },
	{ "command": "noop", "key": "ctrl+9" },
	{
		"key": "ctrl+0",
		"command": "textmarker.goToNextHighlight",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+9",
		"command": "textmarker.goToPreviousHighlight",
		"when": "editorTextFocus"
	},

	/* ryu1kn.partial-diff */
	{
		"key": "ctrl+k c",
		"command": "extension.partialDiff.diffSelectionWithClipboard"
	},

	/* hediet.hediet-power-tools */
	{
		"key": "shift+enter",
		"command": "hediet-power-tools.apply-rename",
		"when": "hediet-power-tools.apply-rename.applicable"
	},

	/* Ctrl+k Ctrl+f */
	{ "command": "noop", "key": "ctrl+k ctrl+f" },
	{
		"key": "ctrl+k ctrl+f",
		"command": "editor.action.format",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+f",
		"command": "editor.action.formatDocument.none",
		"when": "editorTextFocus && !editorHasDocumentFormattingProvider"
	},
	{
		"key": "ctrl+k ctrl+f",
		"command": "editor.action.formatSelection",
		"when": "editorTextFocus && editorHasSelection"
	},
	{
		"key": "ctrl+k ctrl+f",
		"command": "editor.action.formatDocument.none",
		"when": "editorTextFocus && editorHasSelection && !editorHasDocumentSelectionFormattingProvider"
	},
	{
		"key": "ctrl+k ctrl+f",
		"command": "notebook.formatCell",
		"when": "notebookCellFocused && !inputFocus"
	},

	/* Ctrl+i is to match Ctrl+Space with regard to Suggestions and Hints */
	{ "command": "noop", "key": "ctrl+i" },
	{ "command": "noop", "key": "ctrl+shift+i" },
	{ "command": "", "key": "ctrl+i", "when": "terminalFocus" },
	{
		"key": "ctrl+i",
		"command": "editor.action.triggerSuggest",
		"when": "textInputFocus && !editorHasSelection && !editorHasMultipleSelections"
	},
	{
		"key": "ctrl+i",
		"command": "focusSuggestion",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "ctrl+i",
		"command": "toggleSuggestionDetails",
		"when": "suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+shift+i",
		"command": "editor.action.triggerParameterHints",
		"when": "editorTextFocus && !editorHasSelection && !editorHasMultipleSelections"
	},

	/* GitHub Copilot */
	{
		"key": "enter",
		"command": "noop",
		"when": "inChatInput && !chatInputHasText"
	},
	/* Side Chat */
	{
		"key": "ctrl+alt+i",
		"command": "workbench.action.chat.open"
	},
	{
		"key": "ctrl+win+i",
		"command": "workbench.action.chat.open"
	},
	/* Completions Panel */
	{ "command": "noop", "key": "shift+ctrl+alt+i" },
	{
		"key": "shift+ctrl+alt+i",
		"command": "github.copilot.generate",
		"when": "editorTextFocus && !editorHasSelection && !editorHasMultipleSelections"
	},
	{
		"key": "shift+ctrl+win+i",
		"command": "github.copilot.generate",
		"when": "editorTextFocus && !editorHasSelection && !editorHasMultipleSelections"
	},
	{
		"key": "ctrl+enter",
		"command": "github.copilot.acceptCursorPanelSolution",
		"when": "activeWebviewPanelId == 'GitHub Copilot Suggestions'" // resourceScheme == 'webview-panel'
	},
	{
		"key": "ctrl+]",
		"command": "github.copilot.nextPanelSolution",
		"when": "activeWebviewPanelId == 'GitHub Copilot Suggestions'"
	},
	{
		"key": "ctrl+[",
		"command": "github.copilot.previousPanelSolution",
		"when": "activeWebviewPanelId == 'GitHub Copilot Suggestions'"
	},
	/* Quick/Suggest */
	{
		"key": "ctrl+k shift+i",
		"command": "workbench.action.quickchat.toggle",
		"when": "editorTextFocus && !editorHasMultipleSelections"
	},
	{
		"key": "ctrl+k shift+i",
		"command": "github.copilot.terminal.suggestCommand",
		"when": "terminalFocus"
	},
	{
		"key": "alt+\\",
		"command": "editor.action.inlineSuggest.trigger",
		"when": "editorTextFocus && !editorHasSelection && !editorHasMultipleSelections"
	},
	/* Inline Chat */
	{
		"key": "shift+alt+]",
		"command": "inlineChat.moveToNextHunk",
		"when": "inlineChatVisible && !inlineChatHasActiveRequest && config.inlineChat.mode == 'live'"
	},
	{
		"key": "shift+alt+[",
		"command": "inlineChat.moveToPreviousHunk",
		"when": "inlineChatVisible && !inlineChatHasActiveRequest && config.inlineChat.mode == 'live'"
	},
	{
		"key": "shift+alt+backspace",
		"command": "inlineChat.discardHunkChange",
		"when": "inlineChatVisible && !inlineChatHasActiveRequest && config.inlineChat.mode == 'live'"
	},
	{ "command": "noop", "key": "ctrl+k i" },
	{
		"key": "ctrl+k i",
		"command": "inlineChat.start",
		"when": "editorTextFocus && !editorHasMultipleSelections"
	},
	{
		"key": "ctrl+shift+x",
		"command": "inlineChat.startWithCurrentLine",
		"when": "editorTextFocus && !editorHasMultipleSelections"
	},
	{
		"key": "ctrl+k i",
		"command": "workbench.action.terminal.chat.start",
		"when": "terminalFocusInAny"
	},

	/* Ctrl+Shift+. */
	{ "command": "noop", "key": "ctrl+shift+." },
	{
		"key": "ctrl+shift+.",
		"command": "editor.action.insertSnippet",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+.",
		"command": "editor.action.surroundWithSnippet",
		"when": "editorTextFocus && editorHasSelection"
	},

	/* ^+C to Copy in Panel (not in Editor) */
	{
		"key": "ctrl+shift+c",
		"command": "editor.action.clipboardCopyAction",
		"when": "panelFocus"
	},

	/* ^+V to Paste */
	/* I could set ^+V unbound under Windows, but the following command for "shift+cmd+v" under Mac is in order to Paste into any input */
	{
		"key": "ctrl+shift+v",
		"command": "editor.action.clipboardPasteAction"
	},
	/* Paste As...</strong> */
	{
		"key": "ctrl+shift+v",
		"command": "editor.action.pasteAs",
		"when": "editorTextFocus && !editorReadonly"
	},

	/* Copy/Paste in Terminal */
	{
		"key": "ctrl+shift+c",
		"command": "workbench.action.terminal.copySelection",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},
	{
		"key": "ctrl+shift+v",
		"command": "workbench.action.terminal.paste",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},

	/* Ctrl+k v/V: show Preview */
	{ "command": "noop", "key": "ctrl+k v" },
	{ "command": "noop", "key": "ctrl+k shift+v" },
	{
		"key": "ctrl+k v",
		"command": "markdown.showPreviewToSide",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+k shift+v",
		"command": "markdown.showPreview",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+k v",
		"command": "svg.showSvg",
		"when": "editorLangId == 'svg'"
	},

	/* Try and block a useless Tab */
	{
		"key": "tab",
		"command": "editor.action.indentLines",
		"when": "editorTextFocus && editorHasSelection && !inSnippetMode && !editorTabMovesFocus && !suggestWidgetVisible && !editorReadonly"
	},

	/* Word Wrap */
	{ "command": "", "key": "alt+z" },
	{
		"key": "ctrl+alt+z",
		"command": "editor.action.toggleWordWrap"
	},
	{
		"key": "ctrl+alt+z",
		"command": "workbench.action.terminal.sizeToContentWidth",
		"when": "terminalFocusInAny || terminalFindFocused || terminalTabsFocus"
	},

	/* User-Defined Snippets */
	/* https://code.visualstudio.com/docs/editor/userdefinedsnippets#_snippet-syntax */
	{
		"key": "alt+shift+;",
		"when": "textInputFocus",
		"command": "editor.action.insertSnippet",
		"args": { "snippet": "${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}T${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}${CURRENT_TIMEZONE_OFFSET}$0" }
	},
	{
		"key": "alt+shift+;",
		"when": "textInputFocus && editorHasSelection",
		"command": "editor.action.insertSnippet",
		"args": { "snippet": "${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}T${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}${CURRENT_TIMEZONE_OFFSET}$1\n${TM_SELECTED_TEXT}$0" }
	},

	/* symbols with Mac Option key */
	{ "when": "!isMac && textInputFocus", "key": "alt+;",
	  "command": "type", "args": { "text": "â€¦" } },
	{ "when": "!isMac && textInputFocus", "key": "alt+o",
	  "command": "type", "args": { "text": "Ã¸" } },
	{ "when": "!isMac && textInputFocus", "key": "shift+alt+o",
	  "command": "type", "args": { "text": "Ã˜" } },
	{ "when": "!isMac && textInputFocus", "key": "alt+6",
	  "command": "type", "args": { "text": "Â§" } },
	{ "when": "!isMac && textInputFocus", "key": "shift+alt+9",
	  "command": "type", "args": { "text": "Â·" } }, // &middot; (Interpunct)
	{ "when": "!isMac && textInputFocus", "key": "alt+8",
	  "command": "type", "args": { "text": "â€¢" } }, // Bullet
	{ "when": "!isMac && textInputFocus", "key": "shift+alt+8",
	  "command": "type", "args": { "text": "Â°" } },
	{ "when": "!isMac && textInputFocus", "key": "alt+m",
	  "command": "type", "args": { "text": "Âµ" } },
	{ "when": "textInputFocus", "key": "shift+alt+m",
	  "command": "type", "args": { "text": "âˆ’" } }, // Minus Sign
	{ "when": "!isMac && textInputFocus", "key": "alt+-",
	  "command": "type", "args": { "text": "â€“" } }, // En Dash
	{ "when": "!isMac && textInputFocus", "key": "shift+alt+-",
	  "command": "type", "args": { "text": "â€”" } }, // Em Dash
	{ "when": "!isMac && textInputFocus", "key": "alt+=",
	  "command": "type", "args": { "text": "â‰ " } },
	{ "when": "!isMac && textInputFocus", "key": "shift+alt+=",
	  "command": "type", "args": { "text": "Â±" } },
	{ "when": "!isMac && textInputFocus", "key": "alt+x",
	  "command": "type", "args": { "text": "â‰ˆ" } },
	{ "when": "!isMac && textInputFocus", "key": "alt+l",
	  "command": "type", "args": { "text": "Â¬" } }, // Not Sign
	{ "when": "!isMac && textInputFocus", "key": "alt+j",
	  "command": "type", "args": { "text": "âˆ†" } },
	{ "when": "!isMac && textInputFocus", "key": "shift+alt+3",
	  "command": "type", "args": { "text": "â€¹" } },
	{ "when": "!isMac && textInputFocus", "key": "shift+alt+4",
	  "command": "type", "args": { "text": "â€º" } },
	{ "when": "!isMac && textInputFocus", "key": "alt+5",
	  "command": "type", "args": { "text": "âˆž" } },
	{ "when": "!isMac && textInputFocus", "key": "alt+z",
	  "command": "type", "args": { "text": "\u03a9" } },

	/* editor.action & search.action to Find/Replace */
	{
		"key": "shift+alt+z",
		"command": "editor.action.replaceOne"
	},
	{
		"key": "shift+alt+z",
		"command": "macros.focusFindWidgetSecondInput", /* ctf0.macros */
		"when": "!findInputFocussed && !replaceInputFocussed"
	},
	{
		"key": "shift+alt+z",
		"command": "editor.action.startFindReplaceAction",
		"when": "findInputFocussed"
	},
	{
		"key": "delete",
		"command": "search.action.remove",
		"when": "fileMatchOrMatchFocus" // == "matchFocus || fileMatchFocus || folderMatchFocus"
	},
	{
		"key": "shift+alt+z",
		"command": "Command requires a Match focus",
		"when": "focusedView == 'workbench.view.search'"
	},
	{
		"key": "shift+alt+z",
		"command": "search.action.replaceAll",
		"when": "searchViewletFocus && replaceActive && listFocus"
	},
	{
		"key": "shift+alt+z",
		"command": "search.action.replace",
		"when": "fileMatchOrMatchFocus"
	},
	{
		"key": "alt+enter",
		"command": "search.action.openInEditor",
		"when": "focusedView == 'workbench.view.search'"
	},
	{
		"key": "alt+enter",
		"command": "Command requires focus on a single-file Match",
		"when": "focusedView == 'workbench.view.search' && listFocus"
	},
	{
		"key": "alt+enter",
		"command": "addCursorsAtSearchResults",
		"when": "fileMatchOrMatchFocus && !folderMatchFocus"
	},
	{
		"key": "alt+enter",
		"command": "Command requires Search Result to appear",
		"when": "!hasSearchResult && focusedView == 'workbench.view.search'"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "Command requires focus in Replace Input Box",
		"when": "!editorFocus || !findWidgetVisible"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "search.action.replaceAll",
		"when": "replaceInputBoxFocus"
	},

	/*~*~*~*/
	{ "key": "alt+shift+\\", "command": "workbench.action.remote.showMenu" },
	{ "key": "f11", "command": "-workbench.action.toggleFullScreen" },
	{ "command": "", "key": "shift+f10", "when": "!isMac" },
	{ "command": "", "key": "alt+`", "when": "isMac" },
	{
		"key": "ctrl+t",
		"command": "workbench.action.files.newUntitledFile"
	},
	{
		"key": "ctrl+win+w",
		"command": "workbench.action.switchWindow"
	},
	{
		"key": "ctrl+alt+f4",
		"command": "workbench.action.quit"
	},
]